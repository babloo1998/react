{"version":3,"sources":["reducers/simpleReducer.js","reducers/rootReducer.js","components/Navigation.js","components/CompanyInfo.js","actions/simpleAction.js","App.js","serviceWorker.js","index.js","store.js"],"names":["initialState","company_name","alias","checked","industry_type","Account_manager","country","startDate","Date","Address_line1","Address_line2","zip","city","phone","states","combineReducers","simpleReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","Navigation","react_default","a","createElement","Navbar","bg","variant","Brand","href","src","alt","style","height","width","Nav","className","Link","color","fontSize","paddingRight","React","Component","FirstPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCheckboxChange","event","setState","target","handledropChange1","value","console","log","handledropChange2","handledropChange3","handledropChange4","handledateChange","date","handleChange","bind","assertThisInitialized","handleSubmit","defineProperty","name","simpleAction","preventDefault","onSubmit","onChange","react_datepicker_es","selected","connect","dispatch","data","App","components_Navigation","CompanyInfo","Boolean","window","location","hostname","match","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca4c1e5c.chunk.js","sourcesContent":["const initialState = {\n  company_name: '',\n  alias:'',\n  checked:false,\n  industry_type:'',\n  Account_manager:'',\n  country:'',\n  startDate: new Date(),\n  Address_line1:'',\n  Address_line2:'',\n  zip:'',\n  city:'',\n  phone:'',\n  states:'',\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n     case 'SIMPLE_ACTION':\n      return {...state, ...action.payload }\n     default:\n      return state\n    }\n   }","import { combineReducers } from 'redux';\nimport simpleReducer from './simpleReducer';\nexport default combineReducers({\n simpleReducer\n});","import React from 'react';\nimport {Nav,Navbar} from 'react-bootstrap';\n\nclass Navigation extends React.Component{\n    render(){\n        return(\n            <div>\n    <Navbar bg=\"light\" variant=\"light\">\n    <Navbar.Brand href=\"#home\"><img src=\"https://i.ibb.co/zZBnK4t/logo.png\" alt=\"logo\" style={{height:\"40px\",width:\"150px\"}}></img></Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"#home\">Home</Nav.Link>\n      <Nav.Link href=\"#customers\">Customer</Nav.Link>\n      <Nav.Link href=\"#reports\">Reports</Nav.Link>\n      <Nav.Link href=\"#help\">Help Centers</Nav.Link>\n    </Nav>\n    <div>\n    <i className=\"fas fa-search\" style={{color:\"grey\",fontSize:\"25px\",paddingRight:\"25px\"}}></i>\n    <i className=\"far fa-user-circle\" style={{color:\"grey\",fontSize:\"25px\",paddingRight:\"25px\"}}></i>\n    </div>\n  </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {connect} from 'react-redux';\nimport '../css/companyInfo.css';\nimport { simpleAction } from '../actions/simpleAction';\n\nclass FirstPage extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n      company_name: '',\n      alias:'',\n      checked:false,\n      industry_type:'',\n      Account_manager:'',\n      country:'',\n      startDate: new Date(),\n      Address_line1:'',\n      Address_line2:'',\n      zip:'',\n      city:'',\n      phone:'',\n      states:'',\n    };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n  \n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n          });\n    }\n    handleCheckboxChange = (event) =>\n    this.setState({ checked: event.target.checked })\n\n    handledropChange1=(event)=>{\n        this.setState({industry_type:event.target.value});\n        console.log(this.state.industry_type)\n      }\n    \n     \n      handledropChange2=(event)=>{\n        this.setState({Account_manager:event.target.value});\n      }\n\n      handledropChange3 =(event)=>\n      {\n        this.setState({country:event.target.value});\n      }\n      \n      handledropChange4=(event)=>{\n        this.setState({states:event.target.value});\n      }\n      \n\n      handledateChange=(date)=> {\n        this.setState({\n          startDate: date\n        });\n      }\n\n    handleSubmit(event) {\n      const { simpleAction } = this.props;\n      event.preventDefault();\n      console.log(this.state);\n      simpleAction({...this.state});\n    }\n  \n    render() {\n      console.log('render state', this.state)\n      return (\n  <div  className=\"form\">\n    <form onSubmit={this.handleSubmit}>\n         <input type=\"checkbox\"\n            checked={this.state.checked}\n            onChange={this.handleCheckboxChange}\n            className=\"checkbox\"\n          /><span>This is a demo company</span>\n        <p>Company Name:</p>\n        <input type=\"text\" name=\"company_name\" onChange={this.handleChange} />\n        <p>Company Alias:</p>\n        <input type=\"text\" name=\"alias\" onChange={this.handleChange} />\n    \n        <h2>Account-Information</h2>\n      \n        <p>Industry Type</p>\n        <select \n        value={this.state.industry_type} \n        onChange={this.handledropChange1} \n        className=\"select-menu\"\n      >\n        <option value=\"sample1\">sample1</option>\n        <option value=\"sample2\">sample2</option>\n        <option value=\"sample3\">sample3</option>\n      </select>\n\n\n       <p>Account manager</p>\n      <select \n        value={this.state.Account_manager} \n        onChange={this.handledropChange2} \n        className=\"select-menu\"\n      >\n       <option value=\"sample1\">sample1</option>\n        <option value=\"sample2\">sample2</option>\n        <option value=\"sample3\">sample3</option>\n      </select><br></br>\n\n      <p>Start Date:</p>\n\n      <DatePicker\n        selected={this.state.startDate}\n        onChange={this.handledateChange}\n        className=\"date-picker\"\n      />\n\n      <h2>Contact-Information</h2>\n\n      <p>Country</p>\n      <select \n        value={this.state.country} \n        onChange={this.handledropChange3} \n        className=\"select-menu\"\n      >\n       <option value=\"sample1\">sample1</option>\n        <option value=\"sample2\">sample2</option>\n        <option value=\"sample3\">sample3</option>\n      </select>\n         \n      <p>Billing Address Line1:</p>\n        <input type=\"text\" name=\"Address_line1\" onChange={this.handleChange}/>\n\n      <p>Billing Address Line2:</p>\n        <input type=\"text\" name=\"Address_line2\" onChange={this.handleChange}/>\n      \n      <p>City:</p>\n        <input type=\"text\" name=\"city\" onChange={this.handleChange}/>\n        \n      <p>Zip code:</p>\n      <select \n        value={this.state.states} \n        onChange={this.handledropChange4} \n        className=\"select-menu-small\"\n      >\n       <option value=\"sample1\">sample1</option>\n        <option value=\"sample2\">sample2</option>\n        <option value=\"sample3\">sample3</option>\n      </select>\n        <input type=\"number\" name=\"zip\" onChange={this.handleChange} className=\"zip-input\"/>\n    \n      <p>Phone Number:</p>\n        <input type=\"number\" name=\"Phone\" onChange={this.handleChange}/>\n       <br></br>\n        <input type=\"submit\" value=\"Submit\" />\n\n    </form>\n  </div>\n  \n      );\n    }\n  }\n  const mapStateToProps = state => ({\n    ...state\n   })\n  \n  const mapDispatchToProps = dispatch => ({\n    simpleAction: (data) => dispatch(simpleAction(data))\n   })\n  export default connect(mapStateToProps,mapDispatchToProps)(FirstPage);","export const simpleAction = (data) => dispatch => {\n    console.log('data', data);\n    dispatch({\n     type: 'SIMPLE_ACTION',\n     payload: data\n    })\n   }","import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation'\nimport CompanyInfo from './components/CompanyInfo';\n\nclass App extends React.Component\n{\n\n  simpleAction = (event) => {\n    this.props.simpleAction();\n   }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <CompanyInfo />\n        \n      </div>\n    );\n  }\n}\n \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n     <App />\n    </Provider>,\n    document.getElementById('root')\n   );\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore(initialState={}) {\n return createStore(\n   rootReducer,\n   initialState,\n   applyMiddleware(thunk)\n );\n}"],"sourceRoot":""}